/*!
Implement Account Statement modules for the FinanceLib library

Module      : financeLib::statements <br>
Copyright   : (c) 2022 Kishaloy Neogi <br>
License     : MIT <br>
Maintainer  : Kishaloy Neogi <br>
Email       : <nkishaloy@yahoo.com>

The module describes the base modules of Account Statements. These includes Balance Sheets,
Income Statements and Cash Flow Statements and their utiities.

You may see the github repository at <https://github.com/n-kishaloy/financelib>
*/

pub enum BsTyp {
    Cash,
    CurrentReceivables,
    CurrentLoans,
    CurrentAdvances,
    OtherCurrentAssets,
    CurrentInvestments,
    Inventories,
    RawMaterials,
    WorkInProgress,
    FinishedGoods,
    CurrentAssets,
    AccountReceivables,
    LongTermLoanAssets,
    LongTermAdvances,
    LongTermInvestments,
    OtherLongTermAssets,
    PlantPropertyEquipment,
    AccumulatedDepreciation,
    NetPlantPropertyEquipment,
    LeasingRentalAssets,
    AccumulatedAmortizationLeaseRental,
    NetLeaseRentalAssets,
    Goodwill,
    CapitalWip,
    OtherTangibleAssets,
    IntangibleAssets,
    IntangibleAssetsDevelopment,
    AccumulatedAmortization,
    NetIntangibleAssets,
    LongTermAssets,
    Assets,
    CurrentPayables,
    CurrentBorrowings,
    CurrentNotesPayable,
    OtherCurrentLiabilities,
    InterestPayable,
    CurrentProvisions,
    CurrentTaxPayables,
    LiabilitiesSaleAssets,
    CurrentLeasesLiability,
    CurrentLiabilities,
    AccountPayables,
    LongTermBorrowings,
    BondsPayable,
    DeferredTaxLiabilities,
    LongTermLeasesLiability,
    DeferredCompensation,
    DeferredRevenues,
    CustomerDeposits,
    OtherLongTermLiabilities,
    PensionProvision,
    TaxProvision,
    LongTermProvision,
    LongTermLiabilities,
    Liabilities,
    CommonStock,
    PreferredStock,
    PdInCapAbovePar,
    PdInCapTreasuryStock,
    RevaluationReserves,
    Reserves,
    RetainedEarnings,
    AccumulatedOci,
    MinorityInterests,
    Equity,
}

pub enum PlTyp {
    OperatingRevenue,
    NonOperatingRevenue,
    ExciseStaxLevy,
    OtherIncome,
    Revenue,
    CostMaterial,
    DirectExpenses,
    COGS,
    Salaries,
    AdministrativeExpenses,
    ResearchNDevelopment,
    OtherOverheads,
    OtherOperativeExpenses,
    OtherExpenses,
    ExceptionalItems,
    GrossProfit,
    Pbitda,
    Depreciation,
    AssetImpairment,
    LossDivestitures,
    Amortization,
    Pbitx,
    InterestRevenue,
    InterestExpense,
    CostDebt,
    OtherFinancialRevenue,
    Pbtx,
    ExtraordinaryItems,
    PriorYears,
    Pbt,
    TaxesCurrent,
    TaxesDeferred,
    Pat,
    NetIncomeDiscontinuedOps,
    NetIncome,
    GainsLossesForex,
    GainsLossesActurial,
    GainsLossesSales,
    FvChangeAvlSale,
    OtherDeferredTaxes,
    OtherComprehensiveIncome,
    TotalComprehensiveIncome,
}

pub enum CfTyp {
    DeferredIncomeTaxes,
    ChangeInventories,
    ChangeReceivables,
    ChangePayables,
    ChangeLiabilities,
    ChangeProvisions,
    OtherCfOperations,
    StockCompensationExpense,
    StockCompensationTaxBenefit,
    AccretionDebtDiscount,
    CashFlowOperations,
    InvestmentsPpe,
    InvestmentsCapDevp,
    InvestmentsLoans,
    AcqEquityAssets,
    DisEquityAssets,
    DisPpe,
    ChangeInvestments,
    CfInvestmentInterest,
    CfInvestmentDividends,
    OtherCfInvestments,
    CashFlowInvestments,
    StockSales,
    StockRepurchase,
    DebtIssue,
    DebtRepay,
    InterestFin,
    Dividends,
    DonorContribution,
    OtherCfFinancing,
    CashFlowFinancing,
    NetCashFlow,
}

use BsTyp::*;

thread_local!(static BALANCE_SHEET_MAP: Vec<(BsTyp, Vec<BsTyp>, Vec<BsTyp>)> = vec![
    (
        Inventories,
        vec![RawMaterials, WorkInProgress, FinishedGoods],
        vec![],
    ),
    (
        CurrentAssets,
        vec![
            Cash,
            CurrentReceivables,
            CurrentLoans,
            CurrentAdvances,
            OtherCurrentAssets,
            CurrentInvestments,
            Inventories,
        ],
        vec![],
    ),
    (
        NetPlantPropertyEquipment,
        vec![PlantPropertyEquipment],
        vec![AccumulatedDepreciation],
    ),
    (
        NetLeaseRentalAssets,
        vec![LeasingRentalAssets],
        vec![AccumulatedAmortizationLeaseRental],
    ),
    (
        NetIntangibleAssets,
        vec![IntangibleAssets, IntangibleAssetsDevelopment],
        vec![AccumulatedAmortization],
    ),
    (
        LongTermAssets,
        vec![
            AccountReceivables,
            LongTermLoanAssets,
            LongTermAdvances,
            LongTermInvestments,
            OtherLongTermAssets,
            NetPlantPropertyEquipment,
            NetLeaseRentalAssets,
            Goodwill,
            CapitalWip,
            OtherTangibleAssets,
            NetIntangibleAssets,
        ],
        vec![],
    ),
    (Assets, vec![CurrentAssets, LongTermAssets], vec![]),
    (
        CurrentLiabilities,
        vec![
            CurrentPayables,
            CurrentBorrowings,
            CurrentNotesPayable,
            OtherCurrentLiabilities,
            InterestPayable,
            CurrentProvisions,
            CurrentTaxPayables,
            LiabilitiesSaleAssets,
            CurrentLeasesLiability,
        ],
        vec![],
    ),
    (
        LongTermLiabilities,
        vec![
            AccountPayables,
            LongTermBorrowings,
            BondsPayable,
            DeferredTaxLiabilities,
            LongTermLeasesLiability,
            DeferredCompensation,
            DeferredRevenues,
            CustomerDeposits,
            OtherLongTermLiabilities,
            PensionProvision,
            TaxProvision,
            LongTermProvision,
        ],
        vec![],
    ),
    (
        Liabilities,
        vec![CurrentLiabilities, LongTermLiabilities],
        vec![],
    ),
    (
        Equity,
        vec![
            CommonStock,
            PreferredStock,
            PdInCapAbovePar,
            PdInCapTreasuryStock,
            RevaluationReserves,
            Reserves,
            RetainedEarnings,
            AccumulatedOci,
            MinorityInterests,
        ],
        vec![],
    ),
]);

#[cfg(test)]
mod tests {
    #[test]
    fn it_works() {
        let result = 2 + 2;
        assert_eq!(result, 4);
    }
}
